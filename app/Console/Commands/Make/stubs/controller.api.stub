<?php

declare(strict_types=1);

namespace {{ namespace }};

use {{ rootNamespace }}Http\Controllers\Controller;
use {{ rootNamespace }}Http\Requests\Store{{ model }}Request;
use {{ rootNamespace }}Http\Requests\Update{{ model }}Request;
use {{ rootNamespace }}Http\Resources\{{ model }}Resource;
use {{ namespacedModel }};
use Illuminate\Http\Resources\Json\AnonymousResourceCollection;
use Illuminate\Http\Resources\Json\JsonResource;
use function abort_if;

class {{ models }}Controller extends Controller
{
    public function __construct()
    {
        $this->authorizeResource({{ model }}::class);
    }

    /**
     * Display a listing of the resource.
     *
     * @return AnonymousResourceCollection
     */
    public function index()
    {
        return {{ model }}Resource::collection(
            {{ model }}::query()->paginate()
        );
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param Store{{ model }}Request $request
     * @return JsonResource
     */
    public function store(Store{{ model }}Request $request): JsonResource
    {
        return {{ model }}Resource::make(
            {{ model }}::create(
                $request->validated()
            )
        );
    }

    /**
     * Display the specified resource.
     *
     * @param  {{ model }} ${{ modelVariable }}
     * @return JsonResource
     */
    public function show({{ model }} ${{ modelVariable }}): JsonResource
    {
        return {{ model }}Resource::make(${{ modelVariable }});
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  Update{{ model }}Request $request
     * @param  {{ model }} ${{ modelVariable }}
     * @return JsonResource
     */
    public function update(Update{{ model }}Request $request, {{ model }} ${{ modelVariable }}): JsonResource
    {
        abort_if(!${{ modelVariable }}->update($request->validated()), 503);

        return {{ model }}Resource::make(${{ modelVariable }});
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  {{ model }} ${{ modelVariable }}
     * @return JsonResource
     */
    public function destroy({{ model }} ${{ modelVariable }}): JsonResource
    {
        abort_if(!${{ modelVariable }}->delete(), 503);

        return {{ model }}Resource::make(${{ modelVariable }});
    }
}
